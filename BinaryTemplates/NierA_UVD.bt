/*
UVs for textures/icon of the UI
*/

LittleEndian();

struct Header {
	uint32 unknown;
	uint32 entriesCount;
	uint32 entriesOffset;
	uint32 texturesOffset;
};

struct Entry {
	char name[64];
	uint32 id<format=hex>;
	uint32 textureId<format=hex>;
	float x;
	float y;
	float width;
	float height;
	float widthInverse<comment="w = 1 / x">;
	float heightInverse<comment="h = 1 / x">;
};

struct Texture
{
	char name[32];
	uint32 id<format=hex>;
};


Header header;

FSeek(header.entriesOffset);
Entry entries[header.entriesCount];

FSeek(header.texturesOffset);
local int texturesCount = 0;
if (header.texturesOffset > header.entriesOffset)
	texturesCount = (FileSize() - header.texturesOffset) / sizeof(Texture);
else
	texturesCount = (header.entriesOffset - header.texturesOffset) / sizeof(Texture);
Texture textures[texturesCount];
